input {
    jdbc {
        jdbc_driver_library => "/usr/share/logstash/lib/mysql-connector-java-5.1.47.jar"
        jdbc_driver_class => "com.mysql.jdbc.Driver"
        jdbc_connection_string => "jdbc:mysql://host.docker.internal:3307/parking?zeroDateTimeBehavior=convertToNull&tinyInt1isBit=false"
        jdbc_user => "root"
        jdbc_password => ""
        jdbc_paging_enabled => true
        tracking_column => "unix_ts_in_secs"
        use_column_value => true
        tracking_column_type => "numeric"
        schedule => "* * * * * *"
        statement => "
            SELECT
                c_id,
                c_status,
                marketing_strategy,
                p_ids,
                personal_id,
                user_class,
                company_name,
                user_name,
                zip,
                address,
                mail,
                tel,
                tel2,
                fax,
                search_area,
                search_lat,
                search_lon,
                search_min,
                search_area_org,
                search_min_org,
                pref_code,
                city_code,
                region_code,
                car_model,
                search_reason,
                use_num,
                (
                    CASE
                        WHEN IFNULL(concrete_schedule, '0000-00-00') != '0000-00-00' THEN concrete_schedule
                        WHEN IFNULL(use_timing, '') != '' THEN REPLACE(
                            SUBSTRING_INDEX(use_timing, ',', 2),
                            ',',
                            '-'
                        )
                        ELSE NULL
                    END
                ) AS when_date,
                (
                    CASE
                        WHEN IFNULL(concrete_schedule, '0000-00-00') != '0000-00-00' THEN 0
                        WHEN IFNULL(use_timing, '') != '' THEN SUBSTRING_INDEX(use_timing, ',', - 1)
                        ELSE NULL
                    END
                ) AS when_duration_class,
                comment,
                memo,
                maximun_of_budget,
                priority_of_conditions,
                is_moved,
                is_bought,
                c_mu_id,
                c_datetime,
                c_update_datetime,
                c_same_id,
                c_from_site,
                c_passed_site,
                c_work_state,
                car_model_id,
                accepted_by,
                assigned_by,
                introduced_by,
                flyer_code,
                expected_sales_amount,
                expected_sales_note,
                expected_sales_year_month,
                (
                    CASE
                        WHEN wish_of_roof = 2 THEN 0
                        WHEN wish_of_roof = 0 THEN NULL
                        ELSE 1
                    END
                ) AS wish_of_roof,
                (
                    CASE
                        WHEN building_has_parking = 2 THEN 0
                        WHEN building_has_parking = 0 THEN NULL
                        ELSE 1
                    END
                ) AS building_has_parking,
                (
                    CASE
                        WHEN car_is_decided = 2 THEN 0
                        WHEN car_is_decided = 0 THEN NULL
                        ELSE 1
                    END
                ) AS car_is_decided,
                (
                    CASE
                        WHEN necessity_of_certification = 2 THEN 0
                        WHEN necessity_of_certification = 0 THEN NULL
                        ELSE 1
                    END
                ) AS necessity_of_certification,
                UNIX_TIMESTAMP(c_update_datetime) AS unix_ts_in_secs
            FROM ps_contact_log
            WHERE (UNIX_TIMESTAMP(c_update_datetime) > :sql_last_value AND c_update_datetime < NOW())
        "
    }
}

filter {
    mutate {
	    rename => [
            "c_id","id",
            "c_status","status",
            "marketing_strategy","[matchingInfo][marketingStrategy]",
            "p_ids","[matchingInfo][ids]",
            "personal_id","[personalInfo][personalId]",
            "company_name","[personalInfo][companyName]",
            "user_name","[personalInfo][userName]",
            "zip","[personalInfo][zip]",
            "address","[personalInfo][address]",
            "mail","[personalInfo][mail]",
            "tel","[personalInfo][tel]",
            "tel2","[personalInfo][tel2]",
            "fax","[personalInfo][fax]",
            "user_class","[matchingInfo][userClass]",
            "search_area","[matchingInfo][searchArea][address]",
            "search_lat","[matchingInfo][searchArea][location][lat]",
            "search_lon","[matchingInfo][searchArea][location][lon]",
            "search_min","[matchingInfo][searchArea][walkingTime][min]",
            "search_area_org","[matchingInfo][searchArea][addressOrg]",
            "search_min_org","[matchingInfo][searchArea][walkingTime][minOrg]",
            "pref_code","[matchingInfo][searchArea][prefCode]",
            "city_code","[matchingInfo][searchArea][cityCode]",
            "region_code","[matchingInfo][searchArea][regionCode]",
            "car_model","[matchingInfo][carModel][model]",
            "car_model_id","[matchingInfo][carModel][id]",
            "search_reason","[matchingInfo][searchReason]",
            "use_num","[matchingInfo][useNum]",
            "when_date", "[matchingInfo][when][date]", 
            "when_duration_class", "[matchingInfo][when][durationClass]",
            "comment","[matchingInfo][comment]",
            "memo", "[matchingInfo][memo]",
            "maximun_of_budget","[matchingInfo][maximumBudget]",
            "wish_of_roof","[matchingInfo][facility][hasRoof]",
            "priority_of_conditions","[matchingInfo][priorityOfConditions]",
            "is_moved","[matchingInfo][relocation][status]",
            "building_has_parking","[matchingInfo][relocation][hasParking]",
            "is_bought","[matchingInfo][newCarPurchase][status]",
            "car_is_decided","[matchingInfo][newCarPurchase][isFixed]",
            "necessity_of_certification","[matchingInfo][isNecessityOfCertification]",
            "c_mu_id","staffId",
            "c_datetime","createdDatetime",
            "c_update_datetime","updatedDatetime",
            "c_same_id","sameId",
            "c_from_site","fromSite",
            "c_passed_site","passedSite",
            "c_work_state","isAssigned",
            "accepted_by","acceptedBy",
            "assigned_by","assignedBy",
            "introduced_by","introducedBy",
            "flyer_code","flyerCode", 
            "expected_sales_amount", "[expectedSales][amount]",
            "expected_sales_note", "[expectedSales][note]",
            "expected_sales_year_month", "[expectedSales][yearMonth]"
        ]
        split => {"[matchingInfo][ids]" => ","}
        remove_field => ["@version", "@timestamp", "unix_ts_in_secs"]
        convert => {
            "[matchingInfo][facility][hasRoof]" => "boolean"
    	    "[matchingInfo][relocation][hasParking]" => "boolean"
    	    "[matchingInfo][newCarPurchase][isFixed]" => "boolean"
    	    "[matchingInfo][isNecessityOfCertification]" => "boolean"
            "isAssigned" => "boolean"
        }
   }
} 
    
output {
    elasticsearch {
        hosts => ["elasticsearch:9200"]
        user => "elastic"
        password => ""
        index => "contacts"
        document_id => "%{id}"
    }
}